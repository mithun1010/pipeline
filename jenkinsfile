pipeline {
    agent any

    environment {
        EMAIL_RECIPIENTS = 'mithunjet8@gmail.com'
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building with Maven...'
                sh 'mvn clean install'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests with JUnit...'
                sh 'mvn test'
            }
            post {
                always {
                    archiveArtifacts artifacts: '**/target/surefire-reports/*.txt', allowEmptyArchive: true
                    mail to: "${EMAIL_RECIPIENTS}",
                         subject: "Test Results",
                         body: "The unit and integration tests have completed.\nCheck Jenkins for more details and log files."
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Running code analysis with SonarQube...'
                sh 'mvn sonar:sonar'
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Running security scan with OWASP ZAP...'
                sh 'zap-cli quick-scan http://localhost:8080'
            }
            post {
                always {
                    archiveArtifacts artifacts: '**/zap-reports/*.html', allowEmptyArchive: true
                    mail to: "${EMAIL_RECIPIENTS}",
                         subject: "Security Scan Results",
                         body: "The security scan has completed.\nCheck Jenkins for more details and log files."
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging with EC2...'
                sh 'scp -i my-ec2-key.pem target/my-app.jar ec2-user@staging-ec2-instance:/path/to/deploy'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                sh 'ssh -i my-ec2-key.pem ec2-user@staging-ec2-instance "mvn test"'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production with EC2...'
                sh 'scp -i my-ec2-key.pem target/my-app.jar ec2-user@prod-ec2-instance:/path/to/deploy'
            }
        }
    }
}
