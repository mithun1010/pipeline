pipeline {
    agent any
    environment {
        LOG_FILE = 'pipeline.log'
    }
    stages {
        stage('Checkout Code') {
            steps {
                echo 'Checking out code...'
                echo 'checkout scm'
            }
        }
        
        stage('Build') {
            steps {
                echo 'Building with Maven...'
                echo 'sh \'mvn clean install > ${LOG_FILE} || exit 1\''
            }
        }
        
        stage('Run Unit Tests') {
            steps {
                echo 'Running Unit Tests...'
                echo 'sh \'mvn test >> ${LOG_FILE} || exit 1\''
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo 'Running SonarQube Analysis...'
                echo 'sh \'sonar-scanner >> ${LOG_FILE} || exit 1\''
            }
        }
        
        stage('Security Scan') {
            steps {
                echo 'Running OWASP ZAP Scan...'
                echo '''
                zap-cli start --start-options "-config api.disablekey=true" || exit 1
                zap-cli quick-scan http://your-app-url || exit 1
                zap-cli report -o zap-report.xml || exit 1
                zap-cli shutdown || exit 1
                '''
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to Staging...'
                echo 'sh \'aws s3 sync ./target s3://your-staging-bucket || exit 1\''
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running Integration Tests on Staging...'
                echo 'sh \'./run_integration_tests.sh >> ${LOG_FILE} || exit 1\''
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to Production...'
                echo 'sh \'aws s3 sync ./target s3://your-production-bucket || exit 1\''
            }
        }
    }
    
    post {
        always {
            echo 'Sending email notifications...'
            emailext(
                to: 'mithunjet8@gmail.com',
                subject: "Pipeline ${currentBuild.fullDisplayName} - ${currentBuild.result}",
                body: "Pipeline finished. Please see the attached logs.",
                attachmentsPattern: 'pipeline.log, zap-report.xml',
                attachLog: true,
                recipientProviders: [[$class: 'DevelopersRecipientProvider']]
            )
        }
    }
}

