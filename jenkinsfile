pipeline {
    agent any

    environment {
        EMAIL_RECIPIENT = 'your-email@example.com'
    }

    stages {
        stage('Build') {
            steps {
                script {
                    echo 'Building the code...'
                    // Tool: Maven
                    sh 'mvn clean install'
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                script {
                    echo 'Running unit and integration tests...'
                    // Tools: JUnit for unit tests, TestNG for integration tests
                    sh 'mvn test'
                    sh 'mvn verify'
                }
            }
        }

        stage('Code Analysis') {
            steps {
                script {
                    echo 'Performing code analysis...'
                    // Tool: SonarQube
                    sh 'mvn sonar:sonar'
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    echo 'Performing security scan...'
                    // Tool: OWASP Dependency-Check
                    sh 'dependency-check.sh --project "My Project" --scan ./'
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                script {
                    echo 'Deploying to staging environment...'
                    // Tool: AWS CLI for deploying to EC2
                    sh 'aws s3 cp my-app.jar s3://my-staging-bucket/'
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                script {
                    echo 'Running integration tests on staging...'
                    // Tool: JUnit or custom test scripts
                    sh 'mvn verify'
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    echo 'Deploying to production environment...'
                    // Tool: AWS CLI for deploying to EC2
                    sh 'aws s3 cp my-app.jar s3://my-production-bucket/'
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
        always {
            script {
                def buildStatus = currentBuild.currentResult
                def emailSubject = "Jenkins Pipeline Notification: ${buildStatus}"
                def emailBody = "Pipeline status: ${buildStatus}\n\n" +
                                 "Check the Jenkins build logs for details."

                if (currentBuild.result == 'SUCCESS') {
                    // Send email after successful builds
                    mail to: "${EMAIL_RECIPIENT}",
                         subject: emailSubject,
                         body: emailBody,
                         attachLog: true
                } else if (currentBuild.result == 'UNSTABLE' || currentBuild.result == 'FAILURE') {
                    // Send email after failed tests or security scans
                    mail to: "${EMAIL_RECIPIENT}",
                         subject: emailSubject,
                         body: emailBody,
                         attachLog: true
                }
            }
        }
    }
}
